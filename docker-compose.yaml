version: "2"

services:
  mongo:
    image: mongo
    restart: always
    ports:
      - 27017:27017
    volumes:
      - "./data:/data/db"

  mmi-client:
    image: navdeep710/ondc-ancillary-services:v3
    container_name: map-client
    environment:
      ENV: prod
      MMI_CLIENT_ID: ${MMI_CLIENT_ID}
      MMI_CLIENT_SECRET: ${MMI_CLIENT_SECRET}
      MMI_ADVANCE_API_KEY: ${MMI_ADVANCE_API_KEY}
      KNOWLARITY_NUMBER: ${KNOWLARITY_NUMBER}
      KNOWLARITY_AGENT_NUMBER: ${KNOWLARITY_AGENT_NUMBER}
      KNOWLARITY_API_KEY: ${KNOWLARITY_API_KEY}
      KNOWLARITY_AUTHORIZATION_HEADER_KEY: ${KNOWLARITY_AUTHORIZATION_HEADER_KEY}
    ports:
      - 8000:8000
    expose:
      - 8000

  nginx:
    build:
      context: biap-app-ui-front
      dockerfile: Dockerfile
      args:
        REACT_APP_BASE_URL: ${REACT_APP_BASE_URL}
        REACT_APP_MMI_BASE_URL: ${REACT_APP_MMI_BASE_URL}
        REACT_APP_FIREBASE_API_KEY: ${REACT_APP_FIREBASE_API_KEY}
        REACT_APP_FIREBASE_AUTH_DOMAIN: ${REACT_APP_FIREBASE_AUTH_DOMAIN}
        REACT_APP_GOOGLE_API_KEY: ${REACT_APP_GOOGLE_API_KEY}
        REACT_APP_JUSTPAY_CLIENT_AND_MERCHANT_KEY: ${REACT_APP_JUSTPAY_CLIENT_AND_MERCHANT_KEY}
        REACT_APP_MERCHANT_KEY_ID: ${REACT_APP_MERCHANT_KEY_ID}
        REACT_APP_PAYMENT_SDK_ENV: ${REACT_APP_PAYMENT_SDK_ENV}
        REACT_APP_PAYMENT_SERVICE_URL: ${REACT_APP_PAYMENT_SERVICE_URL}
        REGISTRY_BASE_URL: ${REGISTRY_BASE_URL}
    container_name: biap-app-ui-front
    #    depends_on:
    #      - biap-bap-client
    environment:
      REACT_APP_BASE_URL: ${REACT_APP_BASE_URL}
      REACT_APP_MMI_BASE_URL: ${REACT_APP_MMI_BASE_URL}
      REACT_APP_FIREBASE_API_KEY: ${REACT_APP_FIREBASE_API_KEY}
      REACT_APP_FIREBASE_AUTH_DOMAIN: ${REACT_APP_FIREBASE_AUTH_DOMAIN}
      REACT_APP_GOOGLE_API_KEY: ${REACT_APP_GOOGLE_API_KEY}
    depends_on:
      - mmi-client
      - biap-client-node-js
    expose:
      - 80
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot

  certbot:
    image: certbot/certbot
    restart: "always"
    volumes:
      - ./data/certbot/conf:/etc/letsencrypt
      - ./data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

  biap-client-node-js:
    restart: "always"
    build:
      context: biap-client-node-js
      args:
        JUSPAY_SECRET_KEY_PATH: ${JUSPAY_SECRET_KEY_PATH}
        JUSPAY_BASE_URL: ${JUSPAY_BASE_URL}
        JUSPAY_MERCHANT_ID: ${JUSPAY_MERCHANT_ID}
        JUSPAY_API_KEY: ${JUSPAY_API_KEY}
        FIREBASE_ADMIN_SERVICE_ACCOUNT: ${FIREBASE_ADMIN_SERVICE_ACCOUNT}
        ONDC_BASE_API_URL: ${ONDC_BASE_API_URL}
        JUSPAY_WEBHOOK_USERNAME: ${JUSPAY_WEBHOOK_USERNAME}
        JUSPAY_WEBHOOK_PASSWORD: ${JUSPAY_WEBHOOK_PASSWORD}
        DOMAIN: ${DOMAIN}
        CITY: ${CITY}
        COUNTRY: ${COUNTRY}
        BAP_ID: ${BAP_ID}
        BAP_URL: ${BAP_URL}
        PROTOCOL_BASE_URL: ${PROTOCOL_BASE_URL}
        DB_CONNECTION_STRING: ${DB_CONNECTION_STRING}
        BAP_PRIVATE_KEY: ${BAP_PRIVATE_KEY}
        BAP_PUBLIC_KEY: ${BAP_PUBLIC_KEY}
        BAP_UNIQUE_KEY_ID: ${BAP_UNIQUE_KEY_ID}
        PORT: 3000
        NODE_DEV: dev
        REGISTRY_BASE_URL: ${REGISTRY_BASE_URL}
        ENV_TYPE: ${ENV_TYPE}
        BAP_FINDER_FEE_TYPE: ${BAP_FINDER_FEE_TYPE}
        BAP_FINDER_FEE_AMOUNT: ${BAP_FINDER_FEE_AMOUNT}
        SSE_TIMEOUT: ${SSE_TIMEOUT}
    ports:
      - 3000:3000
    expose:
      - 3000
    depends_on:
      - mongo

  biap-igm-node-js:
    build:
      context: biap-igm-node-js
    environment:
      DB_CONNECTION_STRING: ${DB_CONNECTION_STRING}
      PROTOCOL_BASE_URL: ${PROTOCOL_BASE_URL}
      SSE_TIMEOUT: ${SSE_TIMEOUT}
      DOMAIN: ${DOMAIN}
      COUNTRY: ${COUNTRY}
      BAP_ID: ${BAP_ID}
      EXPECTED_RESPONSE_TIME: ${EXPECTED_RESPONSE_TIME}
      EXPECTED_RESOLUTION_TIME: ${EXPECTED_RESOLUTION_TIME}
      BUGZILLA_API_KEY: ${BUGZILLA_API_KEY}
      BUGZILLA_SERVICE_URI: ${BUGZILLA_SERVICE_URI}
      BAP_URL: ${BAP_URL}
      VOLUME_IMAGES_BASE_URL: ${VOLUME_IMAGES_BASE_URL}
    container_name: biap-igm-node-js
    ports:
      - "8989:6969"
    expose:
      - 8989
    depends_on:
      - mongo
    volumes:
      - "./images:/app/images"
    restart: always

  py-ondc-protocol:
    image: navdeep710/ondc-protocol-layer-server:pr-sse-v7.8
    container_name: py-ondc-protocol
    environment:
      ENV: ${PROTOCOL_ENV}
      MONGO_DATABASE_HOST: ${MONGO_DATABASE_HOST}
      BAP_URL: ${BAP_URL}
      CLIENT_WEBHOOK_ENDPOINT: ${CLIENT_WEBHOOK_ENDPOINT}
      REGISTRY_BASE_URL: ${REGISTRY_BASE_URL}
      BAP_PRIVATE_KEY: ${BAP_PRIVATE_KEY}
      VERIFICATION_ENABLE: ${VERIFICATION_ENABLE}
      BAP_UNIQUE_KEY_ID: ${BAP_UNIQUE_KEY_ID}
      BAP_PUBLIC_KEY: ${BAP_PUBLIC_KEY}
      BAP_ID: ${BAP_ID}
    ports:
      - 5555:5555
    expose:
      - 5555
    depends_on:
      - mongo

  bugzilla-node-backend:
    container_name: bugzilla-node-dev
    build:
      context: biap-bugzilla-service
      dockerfile: Dockerfile.production
    environment:
      ENV: prod
      BUGZILLA_API_KEY: ${BUGZILLA_API_KEY}
      BUGZILLA_BASE_URI: ${BUGZILLA_BASE_URI}
      BUGZILLA_ADMIN_EMAIL: ${BUGZILLA_ADMIN_EMAIL}
    ports:
      - "8001:8001"
    expose:
      - 8001
    restart: always

  bugzilla-dev-service:
    build:
      context: ./biap-bugzilla-service/bugzilla-main
      dockerfile: Dockerfile
    environment:
      BUGZILLA_WWW: /var/www/html/bugzilla/
      BUGZILLA_ADMIN_EMAIL: ${BUGZILLA_ADMIN_EMAIL}
    container_name: bugzilla-dev-service
    image: shameerkc/bugzilla-dev-sqlite
    ports:
      - "90:80"
      - "5989:5900"
